version: '3'
services:
    web:
        image: nginx:stable-alpine
        ports:
          - "${NGINX_PORT}:80"
        volumes:
          - ./app/:/var/www/html
          - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        depends_on:
          - app
        links:
          - app
        networks:
          - app-network
    app:
        build:
          context: ./app/
          dockerfile: Dockerfile
        volumes:
          - ./app/:/var/www/html
        networks:
          - app-network
        depends_on:
          - mysql
          - redis
        links:
          - mysql
          - redis
    mysql:
        image: mariadb
        environment:
          MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
          MYSQL_DATABASE: ${DB_DATABASE}
          MYSQL_USER: ${DB_USERNAME}
          MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
          - ./docker/database/custom.cnf:/etc/mysql/conf.d/custom.cnf
          - ./docker/database/:/var/lib/mysql/
          - ./docker/database/exchange_rate.sql:/docker-entrypoint-initdb.d/exchange_rate.sql
        networks:
          - app-network
    redis:
        image: redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
          - "${REDIS_PORT}:${REDIS_PORT}"
        volumes:
          - ./docker/redis/data/:/var/lib/redis
          - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
          - app-network
    api:
        build:
          context: ./golang/
          dockerfile: Dockerfile
        ports:
          - "9092:9092"
        restart: on-failure
        depends_on:
          - mysql
          - redis
        links:
          - mysql
          - redis
        networks:
          - app-network
networks:
  app-network:
    driver: bridge